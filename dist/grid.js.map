{"version":3,"sources":["../src/grid.js"],"names":[],"mappings":"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","file":"grid.js","sourcesContent":["\nconst DEFAULTS = {\n    \"container-max-widths\" :{\n        \"xs\": \"100%\",\n        \"md\": \"90%\",\n        \"xxl\": \"1520px\"\n    },\n    \"container-standard-margins\":{\n        \"xs\": \"20px\",\n        \"md\": \"5%\",\n        \"max\": \"auto\"\n    },\n    \"grid-breakpoints\":{\n        \"xs\": 0,\n        \"sm\": \"420px\",\n        \"md\": \"740px\",\n        \"lg\": \"992px\",\n        \"xl\": \"1400px\",\n        \"xxl\": \"1672px\"\n    },\n    \"grid-columns\":12,\n    \"grid-gutter-widths\":{\n        \"xs\": \"20px\",\n        \"md\": \"30px\",\n        \"lg\": \"40px\"\n      }\n};\n\n/**\n * Class representing a Grid Helper.\n *\n */\n\nclass Grid {\n\n  /* gets string, returns number */\n\n  \n\n  _parseVar(value) {\n\n    if (typeof value == 'string' && value.indexOf('px')!= -1) {\n      return parseFloat(value);\n    }\n\n    if (typeof value == 'string' && value.indexOf('%')!= -1) {\n      return parseFloat(value) / 100;\n    }\n\n    return value;\n    \n  }\n\n  _getValesFromSassLoader(_v) {\n    if (_v.type == \"SassMap\") {\n        let values = {};\n        for (let key in _v.value) {\n            let value = _v.value[key];\n            values[key] = `${value.value}${value.unit}`;\n        }\n        return values;\n    } else if (_v.type == \"SassString\" || _v.type == \"SassNumber\") {\n        return _v.value;\n    } \n  }\n\n  /**\n     * Create a Grid Helper.\n     * @param {object} options are either options that extends DEFAUTLS or sass file loaded with `sass-extract-loader` webpack plugin\n     * @example \n     * \n     * import Grid from \"./../src/grid\";\n     * \n     * const config = require('sass-extract-loader!./_bootstrap-config.scss');\n\n     * let grid = new Grid(config);\n     * grid.attach();\n     * grid.toggle();\n     */\n\n  constructor(options = null) {\n  \n    this._cache = {};\n\n    this._breakpoints = ['xs','sm','md','lg','xl','xxl'];\n\n\n    if (options && options.global) { // object from `sass-extract-loader`\n        let _o = options.global;\n\n        options = {};\n\n        if (_o['$container-max-widths']) options['container-max-widths'] = this._getValesFromSassLoader(_o['$container-max-widths']);\n        if (_o['$container-standard-margins']) options['container-standard-margins'] = this._getValesFromSassLoader(_o['$container-standard-margins']);\n        if (_o['$grid-breakpoints']) options['grid-breakpoints'] = this._getValesFromSassLoader(_o['$grid-breakpoints']);\n        if (_o['$grid-columns']) options['grid-columns'] = this._getValesFromSassLoader(_o['$grid-columns']);\n        if (_o['$grid-gutter-widths']) options['grid-gutter-widths'] = this._getValesFromSassLoader(_o['$grid-gutter-widths']);\n        \n    }\n\n    this.config = Object.assign(DEFAULTS, options);\n\n    this.config['calculated-grid-gutter-widths'] = {};\n    this.config['calculated-container-max-widths'] = {};\n\n    var value = 0;\n    var i;\n    var name;\n\n    for (i=0 ; i< this._breakpoints.length; i++) {\n      name = this._breakpoints[i];\n      value = this.config['grid-gutter-widths'][name] ? this.config['grid-gutter-widths'][name] : this._parseVar(value);\n      this.config['calculated-grid-gutter-widths'][name] =  this._parseVar(value);\n    }\n\n    value = 0;\n    for (i=0 ; i< this._breakpoints.length; i++) {\n      name = this._breakpoints[i];\n      value = this.config['container-max-widths'][name] ? this.config['container-max-widths'][name] : value;\n      this.config['calculated-container-max-widths'][name] =  this._parseVar(value);\n    }\n\n\n    this.colClass=\"col-xs-1 col-sm-1 col-md-1\";\n    this.colStyle = [\n      'background:rgba(255,0,0,0.1); height:100%;',\n      'background:rgba(0,0,255,0.1); height:100%;',\n      '1px solid rgba(0,0,0,0.2)'\n    ];\n\n    this.onStage=false;\n  }\n\n  /** \n   * TODO add description\n   */\n\n  attach() {\n    this.once = true;\n    let self = this;\n    window.addEventListener('keydown', function(e) {\n      var tagName =  e.target.tagName.toLowerCase();\n      if (e.key === 'g' && tagName != 'input' && tagName != 'textarea' ) {\n        self.toggleGrid();\n      }\n\n      if (e.key === 'f' && tagName != 'input' && tagName != 'textarea' ) {\n        self.toggleGrid(true);\n      }\n    }, true);\n  }\n\n  /** \n   * TODO add description\n   */\n\n  get currentBreakPoint() {\n    var breakpoint = '';\n    var w = document.body.clientWidth;\n\n    if (this._cache['breapoint_'+w]) {\n      return this._cache['breapoint_'+w];\n    }\n\n    var breakpoints = this.config[\"grid-breakpoints\"];\n\n    for(var key in this.config[\"grid-breakpoints\"]) {\n      var _b = this._parseVar(breakpoints[key]);\n      if (w >= _b) {\n        breakpoint = key;\n      }\n    }\n\n    this._cache['breapoint_'+w] = breakpoint;\n    return breakpoint;\n\n  }\n  /** \n   * TODO add description\n   */\n  get containerWidth() {\n    \n    var windowWidth = document.body.clientWidth;\n    var currentBreakpoint = this.currentBreakPoint;\n    var maxWidth = this._parseVar(this.config['calculated-container-max-widths'][currentBreakpoint]);\n\n    \n\n    if (maxWidth <= 1) {\n      //percentage \n      return windowWidth * maxWidth;\n    } else {\n      if (windowWidth < maxWidth) {\n        return windowWidth;\n      } \n      return maxWidth;\n    }\n   \n  }\n  /** \n   * TODO add description\n   */\n  get containerWidthFull() {\n    \n    var windowWidth = window.innerWidth;\n    var currentBreakpoint = this.currentBreakPoint;\n    var maxWidth = this._parseVar(this.config['calculated-container-max-widths'][currentBreakpoint]);\n\n    \n\n    if (maxWidth <= 1) {\n      //percentage \n      return windowWidth * maxWidth;\n    } else {\n      if (windowWidth < maxWidth) {\n        return windowWidth;\n      } \n      return maxWidth;\n    }\n   \n  }\n  /** \n   * TODO add description\n   */\n  get columns() {\n    return this.config[\"grid-columns\"];\n    \n  }\n  /** \n   * TODO add description\n   */\n  get gutterWidth() {\n    \n    var windowWidth = document.body.clientWidth;\n    var currentBreakpoint = this.currentBreakPoint;\n\n    var gutterWidth = this._parseVar(this.config['calculated-grid-gutter-widths'][currentBreakpoint]);\n\n    return gutterWidth;\n\n  }\n  /** \n   * TODO add description\n   */\n  get gutterWidthFull() {\n    \n    var windowWidth = window.innerWidth;\n    var currentBreakpoint = this.currentBreakPoint;\n\n    var gutterWidth = this._parseVar(this.config['calculated-grid-gutter-widths'][currentBreakpoint]);\n\n    return gutterWidth;\n\n  }\n  /** \n   * TODO add description\n   */\n  get columnWidth() {\n    \n    return (this.containerWidth / this.columns) - (1 * this.gutterWidth);\n\n  }\n  /** \n   * TODO add description\n   */\n  get columnWidthFull() {\n    \n    return (this.containerWidthFull / this.columns) - (1 * this.gutterWidthFull);\n\n  }\n  /** \n   * TODO add description\n   */\n  toggleGrid(fluid = false) {\n    if (this.onStage) {\n      document.querySelector('.grid-helper').parentNode.removeChild(document.querySelector('.grid-helper'));\n    } else {\n      let html = \"<div class='grid-helper' style='z-index: 999; width:100%; height: 100%; position:fixed; left:0; top:0;'>\";\n      html += \"<div class='\"+(fluid ? \"container-fluid\" : \"container\")+\"' style='height:100%;'>\";\n      html += \"<div class='row' style='height:100%;'>\";\n      for (let i = 1; i <= this.columns; i++) {\n        let border_style = i == 1 ?  `border-right: ${this.colStyle[2]} ;border-left: ${this.colStyle[2]}` : `border-right: ${this.colStyle[2]}`;\n        html += `<div class=' ${this.colClass} ' style=' ${border_style} '><div class='column' style=' ${this.colStyle[i % 2]} '></div></div>`;\n      }\n      html += \"</div></div></div>\";\n      document.body.insertAdjacentHTML('beforeend', html);\n    }\n    this.onStage = !this.onStage;\n  }\n\n}\n\nexport default Grid;\nmodule.exports = Grid;\n"]}